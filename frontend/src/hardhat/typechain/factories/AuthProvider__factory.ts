/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AuthProvider } from "../AuthProvider";

export class AuthProvider__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(operators: string[], overrides?: Overrides): Promise<AuthProvider> {
    return super.deploy(operators, overrides || {}) as Promise<AuthProvider>;
  }
  getDeployTransaction(
    operators: string[],
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(operators, overrides || {});
  }
  attach(address: string): AuthProvider {
    return super.attach(address) as AuthProvider;
  }
  connect(signer: Signer): AuthProvider__factory {
    return super.connect(signer) as AuthProvider__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuthProvider {
    return new Contract(address, _abi, signerOrProvider) as AuthProvider;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "authenticated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "Auth",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "parentAddress",
        type: "address",
      },
    ],
    name: "AuthSub",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "subAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "parentAddress",
        type: "address",
      },
    ],
    name: "AuthSubRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "authenticate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "authenticateSub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "controllers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "deAuthenticateSub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "latestAcceptedTimestamp",
        type: "uint256",
      },
    ],
    name: "hasAuthenticated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isAuthenticated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isSub",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "lastAuth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
    ],
    name: "setControllers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "setTTL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "subActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "subs",
    outputs: [
      {
        internalType: "address[]",
        name: "subAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261012c6004553480156200001757600080fd5b5060405162000e5a38038062000e5a833981810160405260208110156200003d57600080fd5b81019080805160405193929190846401000000008211156200005e57600080fd5b9083019060208201858111156200007457600080fd5b82518660208202830111640100000000821117156200009257600080fd5b82525081516020918201928201910280838360005b83811015620000c1578181015183820152602001620000a7565b50505050905001604052505050620000df81620000e660201b60201c565b506200023c565b60005b6005548110156200014557600060066000600584815481106200010857fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101620000e9565b5060005b8151811015620001a1576001600660008484815181106200016657fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010162000149565b508051620001b7906005906020840190620001bb565b5050565b82805482825590600052602060002090810192821562000213579160200282015b828111156200021357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001dc565b506200022192915062000225565b5090565b5b8082111562000221576000815560010162000226565b610c0e806200024c6000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c806308e0d29d146100a95780635c3ae697146100d15780636180a38c146101095780636c7419501461012f5780637cc0c3a71461014c578063a5e48025146101a4578063b508c872146101ca578063bae6bd911461020a578063bfbcd07414610230578063ccf4141614610256578063d15d41501461027c578063ea74838a146102a2575b600080fd5b6100cf600480360360208110156100bf57600080fd5b50356001600160a01b0316610310565b005b6100f7600480360360208110156100e757600080fd5b50356001600160a01b03166103bd565b60408051918252519081900360200190f35b6100cf6004803603602081101561011f57600080fd5b50356001600160a01b03166103dc565b6100cf6004803603602081101561014557600080fd5b50356104de565b610154610535565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610190578181015183820152602001610178565b505050509050019250505060405180910390f35b610154600480360360208110156101ba57600080fd5b50356001600160a01b0316610597565b6101f6600480360360408110156101e057600080fd5b506001600160a01b03813516906020013561060d565b604080519115158252519081900360200190f35b6101f66004803603602081101561022057600080fd5b50356001600160a01b03166106b9565b6101f66004803603602081101561024657600080fd5b50356001600160a01b03166106f5565b6100cf6004803603602081101561026c57600080fd5b50356001600160a01b0316610742565b6101f66004803603602081101561029257600080fd5b50356001600160a01b03166108d4565b6100cf600480360360208110156102b857600080fd5b810190602081018135600160201b8111156102d257600080fd5b8201836020820111156102e457600080fd5b803590602001918460208302840111600160201b8311171561030557600080fd5b5090925090506108e4565b3360009081526006602052604090205460ff16610362576040805162461bcd60e51b815260206004820152601c6024820152600080516020610afe833981519152604482015290519081900360640190fd5b6001600160a01b0381166000818152602081815260409182902042908190558251938452908301523382820152517f6f39e65c92f85d155c4d6cb05ff84936934182aa943c7cdf45898a9a7af2b8ad9181900360600190a150565b6001600160a01b0381166000908152602081905260409020545b919050565b336000908152602081905260409020546104275760405162461bcd60e51b815260040180806020018281038252602f815260200180610acf602f913960400191505060405180910390fd5b6001600160a01b0381811660009081526002602052604090205416331461047f5760405162461bcd60e51b815260040180806020018281038252602c815260200180610bad602c913960400191505060405180910390fd5b6001600160a01b038116600081815260036020908152604091829020805460ff1916905581513381529081019290925280517f8b0b014ad526c1d028bf7f4d9f825541a2fb9b05b63c3d53ee602e6e6813112e9281900390910190a150565b3360009081526006602052604090205460ff16610530576040805162461bcd60e51b815260206004820152601c6024820152600080516020610afe833981519152604482015290519081900360640190fd5b600455565b6060600580548060200260200160405190810160405280929190818152602001828054801561058d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161056f575b5050505050905090565b6001600160a01b03811660009081526001602090815260409182902080548351818402810184019094528084526060939283018282801561060157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e3575b50505050509050919050565b6001600160a01b03821660009081526020819052604081205480158015906106355750828110155b156106445760019150506106b3565b6001600160a01b03841660009081526003602052604090205460ff16156106ad576001600160a01b0380851660009081526002602090815260408083205490931682528190522054801580159061069b5750838110155b156106ab576001925050506106b3565b505b60009150505b92915050565b33600090815260208190526040812054156106d6575060006103d7565b506001600160a01b031660009081526003602052604090205460ff1690565b3360009081526020819052604081205415610712575060006103d7565b6001600160a01b03828116600090815260026020526040902054161561073a575060016103d7565b506000919050565b3360009081526020819052604090205461078d5760405162461bcd60e51b815260040180806020018281038252602c815260200180610b81602c913960400191505060405180910390fd5b33600090815260208190526040902054156107d95760405162461bcd60e51b815260040180806020018281038252602e815260200180610b1e602e913960400191505060405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff16156108315760405162461bcd60e51b8152600401808060200182810382526035815260200180610b4c6035913960400191505060405180910390fd5b6001600160a01b03811660008181526002602090815260408083208054336001600160a01b0319918216811790925560038452828520805460ff19166001908117909155828652808552838620805491820181558652948490209094018054909416851790935580519283529082019290925281517f778c6f95da8f7fef1c247bfe03b979d67e2f0275a06831f3cbd9a08248a287a3929181900390910190a150565b60006106b382600454420361060d565b3360009081526006602052604090205460ff16610936576040805162461bcd60e51b815260206004820152601c6024820152600080516020610afe833981519152604482015290519081900360640190fd5b61097282828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061097692505050565b5050565b60005b6005548110156109d2576000600660006005848154811061099657fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101610979565b5060005b8151811015610a2b576001600660008484815181106109f157fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016109d6565b508051600580548282556000829052610972927f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db091820191602086018215610aa9579160200282015b82811115610aa957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610a74565b50610ab5929150610ab9565b5090565b5b80821115610ab55760008155600101610aba56fe6d73672e73656e64657220697320686173206e6f74206265656e2061757468656e74696361746564206265666f72656d73672e73656e646572206973206e6f7420636f6e74726f6c6c6572000000006164647265737320697320616c6c726561647920636c61696d656420627920616e6f7468657220616464726573736164647265737320697320616c6c726561647920636c61696d65642061732073756220627920616e6f7468657220616464726573736d73672e73656e64657220686173206e6f74206265656e2061757468656e74696361746564206265666f72656d73672e73656e646572206973206e6f74206f776e6572206f66207265717565737465642061646472657373a264697066735822122096423327b6cb77a251d1469ecfc0a8c627c17790653da04b1db1fd3579af89b064736f6c63430007030033";
